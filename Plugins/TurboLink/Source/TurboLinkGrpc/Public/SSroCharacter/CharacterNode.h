//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "CharacterMessage.h"
#include "CharacterNode.generated.h"

class UCharacterService;
class UCharacterServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceGetCharacters : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceGetCharactersDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterCharactersDetails&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService GetCharacters"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceGetCharacters* GetCharacters(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetCharactersDelegate OnGetCharactersResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetCharactersDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterCharactersDetails& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceGetCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceGetCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterCharacterDetails&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService GetCharacter"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceGetCharacter* GetCharacter(UObject* WorldContextObject, const FGrpcSroCharacterCharacterTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetCharacterDelegate OnGetCharacterResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetCharacterDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterCharacterTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterCharacterDetails& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceCreateCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceCreateCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterCharacterDetails&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService CreateCharacter"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceCreateCharacter* CreateCharacter(UObject* WorldContextObject, const FGrpcSroCharacterCreateCharacterRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceCreateCharacterDelegate OnCreateCharacterResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceCreateCharacterDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterCreateCharacterRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterCharacterDetails& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceDeleteCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceDeleteCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService DeleteCharacter"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceDeleteCharacter* DeleteCharacter(UObject* WorldContextObject, const FGrpcSroCharacterCharacterTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceDeleteCharacterDelegate OnDeleteCharacterResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceDeleteCharacterDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterCharacterTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceGetAllCharactersForUser : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceGetAllCharactersForUserDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterCharactersDetails&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService GetAllCharactersForUser"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceGetAllCharactersForUser* GetAllCharactersForUser(UObject* WorldContextObject, const FGrpcSroUserTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetAllCharactersForUserDelegate OnGetAllCharactersForUserResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetAllCharactersForUserDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroUserTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterCharactersDetails& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceEditCharacter : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceEditCharacterDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService EditCharacter"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceEditCharacter* EditCharacter(UObject* WorldContextObject, const FGrpcSroCharacterEditCharacterRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceEditCharacterDelegate OnEditCharacterResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceEditCharacterDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterEditCharacterRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceAddCharacterPlayTime : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceAddCharacterPlayTimeDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterPlayTimeResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService AddCharacterPlayTime"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceAddCharacterPlayTime* AddCharacterPlayTime(UObject* WorldContextObject, const FGrpcSroCharacterAddPlayTimeRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceAddCharacterPlayTimeDelegate OnAddCharacterPlayTimeResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceAddCharacterPlayTimeDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterAddPlayTimeRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterPlayTimeResponse& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceGetInventory : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceGetInventoryDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterInventory&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService GetInventory"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceGetInventory* GetInventory(UObject* WorldContextObject, const FGrpcSroCharacterCharacterTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetInventoryDelegate OnGetInventoryResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceGetInventoryDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterCharacterTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterInventory& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallCharacterServiceSetInventory : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FCharacterServiceSetInventoryDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call CharacterService SetInventory"), Category = "TurboLink|CharacterService")
	static UCallCharacterServiceSetInventory* SetInventory(UObject* WorldContextObject, const FGrpcSroCharacterUpdateInventoryRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceSetInventoryDelegate OnSetInventoryResponse;

	UPROPERTY(BlueprintAssignable)
	FCharacterServiceSetInventoryDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UCharacterService* CharacterService;
	
	UPROPERTY()
	UCharacterServiceClient* CharacterServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterUpdateInventoryRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};
