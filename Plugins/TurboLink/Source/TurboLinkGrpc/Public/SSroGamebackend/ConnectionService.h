//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SSroGamebackend/ConnectionClient.h"
#include "ConnectionService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UConnectionService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	UConnectionServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UConnectionServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendConnectGameServerResponse& Response)> FConnectGameServerResponseLambda;
	void CallConnectGameServer(const FGrpcSroCharacterCharacterTarget& Request, FConnectGameServerResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroCharacterCharacterDetails& Response)> FVerifyConnectResponseLambda;
	void CallVerifyConnect(const FGrpcSroGamebackendVerifyConnectRequest& Request, FVerifyConnectResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendConnectGameServerResponse& Response)> FTransferPlayerResponseLambda;
	void CallTransferPlayer(const FGrpcSroGamebackendTransferPlayerRequest& Request, FTransferPlayerResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendConnectionStatus& Response)> FIsPlayingResponseLambda;
	void CallIsPlaying(const FGrpcSroCharacterCharacterTarget& Request, FIsPlayingResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

public:
	class Private;
	Private* const d = nullptr;

public:
	UConnectionService();
	virtual ~UConnectionService();
};

