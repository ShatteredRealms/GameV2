//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SSroGamebackend/ServermanagerClient.h"
#include "ServermanagerService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UServerManagerService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	UServerManagerServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UServerManagerServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response)> FCreateDimensionResponseLambda;
	void CallCreateDimension(const FGrpcSroGamebackendCreateDimensionRequest& Request, FCreateDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response)> FDuplicateDimensionResponseLambda;
	void CallDuplicateDimension(const FGrpcSroGamebackendDuplicateDimensionRequest& Request, FDuplicateDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response)> FGetDimensionResponseLambda;
	void CallGetDimension(const FGrpcSroGamebackendDimensionTarget& Request, FGetDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimensions& Response)> FGetAllDimensionResponseLambda;
	void CallGetAllDimension(const FGrpcGoogleProtobufEmpty& Request, FGetAllDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response)> FEditDimensionResponseLambda;
	void CallEditDimension(const FGrpcSroGamebackendEditDimensionRequest& Request, FEditDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FDeleteDimensionResponseLambda;
	void CallDeleteDimension(const FGrpcSroGamebackendDimensionTarget& Request, FDeleteDimensionResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response)> FCreateMapResponseLambda;
	void CallCreateMap(const FGrpcSroGamebackendCreateMapRequest& Request, FCreateMapResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response)> FGetMapResponseLambda;
	void CallGetMap(const FGrpcSroGamebackendMapTarget& Request, FGetMapResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMaps& Response)> FGetAllMapsResponseLambda;
	void CallGetAllMaps(const FGrpcGoogleProtobufEmpty& Request, FGetAllMapsResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response)> FEditMapResponseLambda;
	void CallEditMap(const FGrpcSroGamebackendEditMapRequest& Request, FEditMapResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response)> FDeleteMapResponseLambda;
	void CallDeleteMap(const FGrpcSroGamebackendMapTarget& Request, FDeleteMapResponseLambda ResponseLambda, TMap<FString, FString>& MetaData);

public:
	class Private;
	Private* const d = nullptr;

public:
	UServerManagerService();
	virtual ~UServerManagerService();
};

