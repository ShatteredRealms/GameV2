//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "ServermanagerMessage.h"
#include "ServermanagerNode.generated.h"

class UServerManagerService;
class UServerManagerServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceCreateDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceCreateDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService CreateDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceCreateDimension* CreateDimension(UObject* WorldContextObject, const FGrpcSroGamebackendCreateDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceCreateDimensionDelegate OnCreateDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceCreateDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendCreateDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceDuplicateDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceDuplicateDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService DuplicateDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceDuplicateDimension* DuplicateDimension(UObject* WorldContextObject, const FGrpcSroGamebackendDuplicateDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDuplicateDimensionDelegate OnDuplicateDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDuplicateDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendDuplicateDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceGetDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceGetDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService GetDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceGetDimension* GetDimension(UObject* WorldContextObject, const FGrpcSroGamebackendDimensionTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetDimensionDelegate OnGetDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendDimensionTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceGetAllDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceGetAllDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendDimensions&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService GetAllDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceGetAllDimension* GetAllDimension(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetAllDimensionDelegate OnGetAllDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetAllDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimensions& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceEditDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceEditDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService EditDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceEditDimension* EditDimension(UObject* WorldContextObject, const FGrpcSroGamebackendEditDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceEditDimensionDelegate OnEditDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceEditDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendEditDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceDeleteDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceDeleteDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService DeleteDimension"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceDeleteDimension* DeleteDimension(UObject* WorldContextObject, const FGrpcSroGamebackendDimensionTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDeleteDimensionDelegate OnDeleteDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDeleteDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendDimensionTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceCreateMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceCreateMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService CreateMap"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceCreateMap* CreateMap(UObject* WorldContextObject, const FGrpcSroGamebackendCreateMapRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceCreateMapDelegate OnCreateMapResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceCreateMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendCreateMapRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceGetMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceGetMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService GetMap"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceGetMap* GetMap(UObject* WorldContextObject, const FGrpcSroGamebackendMapTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetMapDelegate OnGetMapResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendMapTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceGetAllMaps : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceGetAllMapsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendMaps&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService GetAllMaps"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceGetAllMaps* GetAllMaps(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetAllMapsDelegate OnGetAllMapsResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceGetAllMapsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMaps& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceEditMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceEditMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGamebackendMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService EditMap"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceEditMap* EditMap(UObject* WorldContextObject, const FGrpcSroGamebackendEditMapRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceEditMapDelegate OnEditMapResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceEditMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendEditMapRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGamebackendMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallServerManagerServiceDeleteMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FServerManagerServiceDeleteMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ServerManagerService DeleteMap"), Category = "TurboLink|ServerManagerService")
	static UCallServerManagerServiceDeleteMap* DeleteMap(UObject* WorldContextObject, const FGrpcSroGamebackendMapTarget& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDeleteMapDelegate OnDeleteMapResponse;

	UPROPERTY(BlueprintAssignable)
	FServerManagerServiceDeleteMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	UServerManagerService* ServerManagerService;
	
	UPROPERTY()
	UServerManagerServiceClient* ServerManagerServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGamebackendMapTarget Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};
