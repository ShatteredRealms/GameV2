#if defined(_MSC_VER)
  #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
  #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
  #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
  #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
  #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'
  #pragma warning (disable:4267) // 'var' : conversion from 'size_t' to 'type', possible loss of data
  #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
  #pragma warning (disable:4307) // 'operator' : integral constant overflow
  #pragma warning (disable:4309) // 'conversion' : truncation of constant value
  #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)
  #pragma warning (disable:4355) // 'this' : used in base member initializer list
  #pragma warning (disable:4506) // no definition for inline function 'function'
  #pragma warning (disable:4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
  #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
  #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
#endif// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sro/character/character.proto

#include "sro/character/character.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace sro {
namespace character {
template <typename>
PROTOBUF_CONSTEXPR PlayTimeResponse::PlayTimeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.time_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlayTimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayTimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayTimeResponseDefaultTypeInternal() {}
  union {
    PlayTimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayTimeResponseDefaultTypeInternal _PlayTimeResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AddPlayTimeRequest::AddPlayTimeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.character_)*/nullptr
  , /*decltype(_impl_.time_)*/ ::uint64_t{0u}
} {}
struct AddPlayTimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddPlayTimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddPlayTimeRequestDefaultTypeInternal() {}
  union {
    AddPlayTimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddPlayTimeRequestDefaultTypeInternal _AddPlayTimeRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CreateCharacterRequest::CreateCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.gender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.realm_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.owner_)*/nullptr
  , /*decltype(_impl_.dimension_)*/nullptr} {}
struct CreateCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterRequestDefaultTypeInternal() {}
  union {
    CreateCharacterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterRequestDefaultTypeInternal _CreateCharacterRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CharacterTarget::CharacterTarget(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CharacterTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterTargetDefaultTypeInternal() {}
  union {
    CharacterTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterTargetDefaultTypeInternal _CharacterTarget_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EditCharacterRequest::EditCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.target_)*/nullptr
  , /*decltype(_impl_.optional_owner_id_)*/{}
  , /*decltype(_impl_.optional_new_name_)*/{}
  , /*decltype(_impl_.optional_gender_)*/{}
  , /*decltype(_impl_.optional_realm_)*/{}
  , /*decltype(_impl_.optional_play_time_)*/{}
  , /*decltype(_impl_.optional_location_)*/{}
  , /*decltype(_impl_.optional_dimension_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct EditCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EditCharacterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EditCharacterRequestDefaultTypeInternal() {}
  union {
    EditCharacterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EditCharacterRequestDefaultTypeInternal _EditCharacterRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CharacterDetails::CharacterDetails(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.owner_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.gender_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.realm_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.dimension_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.location_)*/nullptr
  , /*decltype(_impl_.id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.play_time_)*/ ::uint64_t{0u}
} {}
struct CharacterDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDetailsDefaultTypeInternal() {}
  union {
    CharacterDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDetailsDefaultTypeInternal _CharacterDetails_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CharactersDetails::CharactersDetails(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.characters_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharactersDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharactersDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharactersDetailsDefaultTypeInternal() {}
  union {
    CharactersDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharactersDetailsDefaultTypeInternal _CharactersDetails_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR InventoryItem::InventoryItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.quantity_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.slot_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InventoryItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryItemDefaultTypeInternal() {}
  union {
    InventoryItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryItemDefaultTypeInternal _InventoryItem_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Inventory::Inventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inventory_items_)*/{}
  , /*decltype(_impl_.bank_items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryDefaultTypeInternal() {}
  union {
    Inventory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryDefaultTypeInternal _Inventory_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR UpdateInventoryRequest::UpdateInventoryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.inventory_items_)*/{}
  , /*decltype(_impl_.bank_items_)*/{}
  , /*decltype(_impl_.target_)*/nullptr} {}
struct UpdateInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateInventoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateInventoryRequestDefaultTypeInternal() {}
  union {
    UpdateInventoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateInventoryRequestDefaultTypeInternal _UpdateInventoryRequest_default_instance_;
}  // namespace character
}  // namespace sro
static ::_pb::Metadata file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[10];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_sro_2fcharacter_2fcharacter_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sro_2fcharacter_2fcharacter_2eproto = nullptr;
const ::uint32_t TableStruct_sro_2fcharacter_2fcharacter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sro::character::PlayTimeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::PlayTimeResponse, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::sro::character::AddPlayTimeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sro::character::AddPlayTimeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::AddPlayTimeRequest, _impl_.character_),
    PROTOBUF_FIELD_OFFSET(::sro::character::AddPlayTimeRequest, _impl_.time_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_.gender_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_.realm_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CreateCharacterRequest, _impl_.dimension_),
    0,
    ~0u,
    ~0u,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterTarget, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterTarget, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterTarget, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.target_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_owner_id_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_new_name_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_gender_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_realm_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_play_time_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_location_),
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_.optional_dimension_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.gender_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.realm_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.play_time_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterDetails, _impl_.dimension_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sro::character::CharactersDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::CharactersDetails, _impl_.characters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sro::character::InventoryItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::InventoryItem, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::sro::character::InventoryItem, _impl_.slot_),
    PROTOBUF_FIELD_OFFSET(::sro::character::InventoryItem, _impl_.quantity_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sro::character::Inventory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::Inventory, _impl_.inventory_items_),
    PROTOBUF_FIELD_OFFSET(::sro::character::Inventory, _impl_.bank_items_),
    PROTOBUF_FIELD_OFFSET(::sro::character::UpdateInventoryRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sro::character::UpdateInventoryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sro::character::UpdateInventoryRequest, _impl_.target_),
    PROTOBUF_FIELD_OFFSET(::sro::character::UpdateInventoryRequest, _impl_.inventory_items_),
    PROTOBUF_FIELD_OFFSET(::sro::character::UpdateInventoryRequest, _impl_.bank_items_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::sro::character::PlayTimeResponse)},
        { 9, 19, -1, sizeof(::sro::character::AddPlayTimeRequest)},
        { 21, 34, -1, sizeof(::sro::character::CreateCharacterRequest)},
        { 39, -1, -1, sizeof(::sro::character::CharacterTarget)},
        { 50, 73, -1, sizeof(::sro::character::EditCharacterRequest)},
        { 81, 97, -1, sizeof(::sro::character::CharacterDetails)},
        { 105, -1, -1, sizeof(::sro::character::CharactersDetails)},
        { 114, -1, -1, sizeof(::sro::character::InventoryItem)},
        { 125, -1, -1, sizeof(::sro::character::Inventory)},
        { 135, 146, -1, sizeof(::sro::character::UpdateInventoryRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sro::character::_PlayTimeResponse_default_instance_._instance,
    &::sro::character::_AddPlayTimeRequest_default_instance_._instance,
    &::sro::character::_CreateCharacterRequest_default_instance_._instance,
    &::sro::character::_CharacterTarget_default_instance_._instance,
    &::sro::character::_EditCharacterRequest_default_instance_._instance,
    &::sro::character::_CharacterDetails_default_instance_._instance,
    &::sro::character::_CharactersDetails_default_instance_._instance,
    &::sro::character::_InventoryItem_default_instance_._instance,
    &::sro::character::_Inventory_default_instance_._instance,
    &::sro::character::_UpdateInventoryRequest_default_instance_._instance,
};
const char descriptor_table_protodef_sro_2fcharacter_2fcharacter_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035sro/character/character.proto\022\rsro.cha"
    "racter\032\034google/api/annotations.proto\032\033go"
    "ogle/protobuf/empty.proto\032\021sro/globals.p"
    "roto\032#sro/gamebackend/servermanager.prot"
    "o\" \n\020PlayTimeResponse\022\014\n\004time\030\001 \001(\004\"U\n\022A"
    "ddPlayTimeRequest\0221\n\tcharacter\030\001 \001(\0132\036.s"
    "ro.character.CharacterTarget\022\014\n\004time\030\002 \001"
    "(\004\"\232\001\n\026CreateCharacterRequest\022\036\n\005owner\030\001"
    " \001(\0132\017.sro.UserTarget\022\014\n\004name\030\002 \001(\t\022\016\n\006g"
    "ender\030\003 \001(\t\022\r\n\005realm\030\004 \001(\t\0223\n\tdimension\030"
    "\005 \001(\0132 .sro.gamebackend.DimensionTarget\""
    "7\n\017CharacterTarget\022\014\n\002id\030\001 \001(\004H\000\022\016\n\004name"
    "\030\002 \001(\tH\000B\006\n\004type\"\220\003\n\024EditCharacterReques"
    "t\022.\n\006target\030\001 \001(\0132\036.sro.character.Charac"
    "terTarget\022\022\n\010owner_id\030\003 \001(\tH\000\022\022\n\010new_nam"
    "e\030\004 \001(\tH\001\022\020\n\006gender\030\005 \001(\tH\002\022\017\n\005realm\030\006 \001"
    "(\tH\003\022\023\n\tplay_time\030\007 \001(\004H\004\022!\n\010location\030\010 "
    "\001(\0132\r.sro.LocationH\005\0225\n\tdimension\030\t \001(\0132"
    " .sro.gamebackend.DimensionTargetH\006B\023\n\021o"
    "ptional_owner_idB\023\n\021optional_new_nameB\021\n"
    "\017optional_genderB\020\n\016optional_realmB\024\n\022op"
    "tional_play_timeB\023\n\021optional_locationB\024\n"
    "\022optional_dimension\"\241\001\n\020CharacterDetails"
    "\022\n\n\002id\030\001 \001(\004\022\r\n\005owner\030\002 \001(\t\022\014\n\004name\030\003 \001("
    "\t\022\016\n\006gender\030\004 \001(\t\022\r\n\005realm\030\005 \001(\t\022\021\n\tplay"
    "_time\030\006 \001(\004\022\037\n\010location\030\010 \001(\0132\r.sro.Loca"
    "tion\022\021\n\tdimension\030\t \001(\t\"H\n\021CharactersDet"
    "ails\0223\n\ncharacters\030\001 \003(\0132\037.sro.character"
    ".CharacterDetails\";\n\rInventoryItem\022\n\n\002id"
    "\030\001 \001(\t\022\014\n\004slot\030\002 \001(\r\022\020\n\010quantity\030\003 \001(\004\"t"
    "\n\tInventory\0225\n\017inventory_items\030\001 \003(\0132\034.s"
    "ro.character.InventoryItem\0220\n\nbank_items"
    "\030\002 \003(\0132\034.sro.character.InventoryItem\"\261\001\n"
    "\026UpdateInventoryRequest\022.\n\006target\030\001 \001(\0132"
    "\036.sro.character.CharacterTarget\0225\n\017inven"
    "tory_items\030\002 \003(\0132\034.sro.character.Invento"
    "ryItem\0220\n\nbank_items\030\003 \003(\0132\034.sro.charact"
    "er.InventoryItem2\247\013\n\020CharacterService\022a\n"
    "\rGetCharacters\022\026.google.protobuf.Empty\032 "
    ".sro.character.CharactersDetails\"\026\202\323\344\223\002\020"
    "\022\016/v1/characters\022\215\001\n\014GetCharacter\022\036.sro."
    "character.CharacterTarget\032\037.sro.characte"
    "r.CharacterDetails\"<\202\323\344\223\0026\022\026/v1/characte"
    "rs/id/{id}Z\034\022\032/v1/characters/name/{name}"
    "\022\271\001\n\017CreateCharacter\022%.sro.character.Cre"
    "ateCharacterRequest\032\037.sro.character.Char"
    "acterDetails\"^\202\323\344\223\002X\"\"/v1/users/id/{owne"
    "r.id}/characters:\001*Z/\"*/v1/users/name/{o"
    "wner.username}/characters:\001*\022\207\001\n\017DeleteC"
    "haracter\022\036.sro.character.CharacterTarget"
    "\032\026.google.protobuf.Empty\"<\202\323\344\223\0026*\026/v1/ch"
    "aracters/id/{id}Z\034*\032/v1/characters/name/"
    "{name}\022\236\001\n\027GetAllCharactersForUser\022\017.sro"
    ".UserTarget\032 .sro.character.CharactersDe"
    "tails\"P\202\323\344\223\002J\022\034/v1/users/id/{id}/charact"
    "ersZ*\022(/v1/users/username/{username}/cha"
    "racters\022\236\001\n\rEditCharacter\022#.sro.characte"
    "r.EditCharacterRequest\032\026.google.protobuf"
    ".Empty\"P\202\323\344\223\002J\032\035/v1/characters/id/{targe"
    "t.id}:\001*Z&\032!/v1/characters/name/{target."
    "name}:\001*\022\304\001\n\024AddCharacterPlayTime\022!.sro."
    "character.AddPlayTimeRequest\032\037.sro.chara"
    "cter.PlayTimeResponse\"h\202\323\344\223\002b\032)/v1/chara"
    "cters/id/{character.id}/playtime:\001*Z2\032-/"
    "v1/characters/name/{character.name}/play"
    "time:\001*\022\232\001\n\014GetInventory\022\036.sro.character"
    ".CharacterTarget\032\030.sro.character.Invento"
    "ry\"P\202\323\344\223\002J\022 /v1/characters/id/{id}/inven"
    "toryZ&\022$/v1/characters/name/{name}/inven"
    "tory\022\263\001\n\014SetInventory\022%.sro.character.Up"
    "dateInventoryRequest\032\026.google.protobuf.E"
    "mpty\"d\202\323\344\223\002^\"\'/v1/characters/id/{target."
    "id}/inventory:\001*Z0\"+/v1/characters/name/"
    "{target.name}/inventory:\001*B\010Z\006pkg/pbb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sro_2fcharacter_2fcharacter_2eproto_deps[4] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_sro_2fgamebackend_2fservermanager_2eproto,
        &::descriptor_table_sro_2fglobals_2eproto,
};
static ::absl::once_flag descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sro_2fcharacter_2fcharacter_2eproto = {
    false,
    false,
    2964,
    descriptor_table_protodef_sro_2fcharacter_2fcharacter_2eproto,
    "sro/character/character.proto",
    &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
    descriptor_table_sro_2fcharacter_2fcharacter_2eproto_deps,
    4,
    10,
    schemas,
    file_default_instances,
    TableStruct_sro_2fcharacter_2fcharacter_2eproto::offsets,
    file_level_metadata_sro_2fcharacter_2fcharacter_2eproto,
    file_level_enum_descriptors_sro_2fcharacter_2fcharacter_2eproto,
    file_level_service_descriptors_sro_2fcharacter_2fcharacter_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter() {
  return &descriptor_table_sro_2fcharacter_2fcharacter_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sro_2fcharacter_2fcharacter_2eproto(&descriptor_table_sro_2fcharacter_2fcharacter_2eproto);
namespace sro {
namespace character {
// ===================================================================

class PlayTimeResponse::_Internal {
 public:
};

PlayTimeResponse::PlayTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.PlayTimeResponse)
}
PlayTimeResponse::PlayTimeResponse(const PlayTimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sro.character.PlayTimeResponse)
}

inline void PlayTimeResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.time_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlayTimeResponse::~PlayTimeResponse() {
  // @@protoc_insertion_point(destructor:sro.character.PlayTimeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlayTimeResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void PlayTimeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlayTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.PlayTimeResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.time_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayTimeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* PlayTimeResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.PlayTimeResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.PlayTimeResponse)
  return target;
}

::size_t PlayTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.PlayTimeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlayTimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlayTimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlayTimeResponse::GetClassData() const { return &_class_data_; }


void PlayTimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlayTimeResponse*>(&to_msg);
  auto& from = static_cast<const PlayTimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.PlayTimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlayTimeResponse::CopyFrom(const PlayTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.PlayTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayTimeResponse::IsInitialized() const {
  return true;
}

void PlayTimeResponse::InternalSwap(PlayTimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.time_, other->_impl_.time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayTimeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[0]);
}
// ===================================================================

class AddPlayTimeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AddPlayTimeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AddPlayTimeRequest, _impl_._has_bits_);
  static const ::sro::character::CharacterTarget& character(const AddPlayTimeRequest* msg);
  static void set_has_character(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sro::character::CharacterTarget&
AddPlayTimeRequest::_Internal::character(const AddPlayTimeRequest* msg) {
  return *msg->_impl_.character_;
}
AddPlayTimeRequest::AddPlayTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.AddPlayTimeRequest)
}
AddPlayTimeRequest::AddPlayTimeRequest(const AddPlayTimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddPlayTimeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.character_){nullptr}
    , decltype(_impl_.time_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.character_ = new ::sro::character::CharacterTarget(*from._impl_.character_);
  }
  _this->_impl_.time_ = from._impl_.time_;
  // @@protoc_insertion_point(copy_constructor:sro.character.AddPlayTimeRequest)
}

inline void AddPlayTimeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.character_){nullptr}
    , decltype(_impl_.time_) { ::uint64_t{0u} }

  };
}

AddPlayTimeRequest::~AddPlayTimeRequest() {
  // @@protoc_insertion_point(destructor:sro.character.AddPlayTimeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddPlayTimeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_;
}

void AddPlayTimeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddPlayTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.AddPlayTimeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_.time_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPlayTimeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .sro.character.CharacterTarget character = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AddPlayTimeRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.AddPlayTimeRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sro.character.CharacterTarget character = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::character(this),
        _Internal::character(this).GetCachedSize(), target, stream);
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.AddPlayTimeRequest)
  return target;
}

::size_t AddPlayTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.AddPlayTimeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sro.character.CharacterTarget character = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_);
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddPlayTimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddPlayTimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddPlayTimeRequest::GetClassData() const { return &_class_data_; }


void AddPlayTimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddPlayTimeRequest*>(&to_msg);
  auto& from = static_cast<const AddPlayTimeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.AddPlayTimeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_character()->::sro::character::CharacterTarget::MergeFrom(
        from._internal_character());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddPlayTimeRequest::CopyFrom(const AddPlayTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.AddPlayTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPlayTimeRequest::IsInitialized() const {
  return true;
}

void AddPlayTimeRequest::InternalSwap(AddPlayTimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddPlayTimeRequest, _impl_.time_)
      + sizeof(AddPlayTimeRequest::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(AddPlayTimeRequest, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPlayTimeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[1]);
}
// ===================================================================

class CreateCharacterRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateCharacterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, _impl_._has_bits_);
  static const ::sro::UserTarget& owner(const CreateCharacterRequest* msg);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sro::gamebackend::DimensionTarget& dimension(const CreateCharacterRequest* msg);
  static void set_has_dimension(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sro::UserTarget&
CreateCharacterRequest::_Internal::owner(const CreateCharacterRequest* msg) {
  return *msg->_impl_.owner_;
}
const ::sro::gamebackend::DimensionTarget&
CreateCharacterRequest::_Internal::dimension(const CreateCharacterRequest* msg) {
  return *msg->_impl_.dimension_;
}
void CreateCharacterRequest::clear_owner() {
  if (_impl_.owner_ != nullptr) _impl_.owner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CreateCharacterRequest::clear_dimension() {
  if (_impl_.dimension_ != nullptr) _impl_.dimension_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateCharacterRequest::CreateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.CreateCharacterRequest)
}
CreateCharacterRequest::CreateCharacterRequest(const CreateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.gender_) {}

    , decltype(_impl_.realm_) {}

    , decltype(_impl_.owner_){nullptr}
    , decltype(_impl_.dimension_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gender().empty()) {
    _this->_impl_.gender_.Set(from._internal_gender(), _this->GetArenaForAllocation());
  }
  _impl_.realm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_realm().empty()) {
    _this->_impl_.realm_.Set(from._internal_realm(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.owner_ = new ::sro::UserTarget(*from._impl_.owner_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimension_ = new ::sro::gamebackend::DimensionTarget(*from._impl_.dimension_);
  }
  // @@protoc_insertion_point(copy_constructor:sro.character.CreateCharacterRequest)
}

inline void CreateCharacterRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_) {}

    , decltype(_impl_.gender_) {}

    , decltype(_impl_.realm_) {}

    , decltype(_impl_.owner_){nullptr}
    , decltype(_impl_.dimension_){nullptr}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.realm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateCharacterRequest::~CreateCharacterRequest() {
  // @@protoc_insertion_point(destructor:sro.character.CreateCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateCharacterRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.gender_.Destroy();
  _impl_.realm_.Destroy();
  if (this != internal_default_instance()) delete _impl_.owner_;
  if (this != internal_default_instance()) delete _impl_.dimension_;
}

void CreateCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.CreateCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.gender_.ClearToEmpty();
  _impl_.realm_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.owner_ != nullptr);
      _impl_.owner_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dimension_ != nullptr);
      _impl_.dimension_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .sro.UserTarget owner = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CreateCharacterRequest.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string gender = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_gender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CreateCharacterRequest.gender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string realm = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_realm();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CreateCharacterRequest.realm"));
        } else {
          goto handle_unusual;
        }
        continue;
      // .sro.gamebackend.DimensionTarget dimension = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CreateCharacterRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.CreateCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sro.UserTarget owner = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::owner(this),
        _Internal::owner(this).GetCachedSize(), target, stream);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CreateCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string gender = 3;
  if (!this->_internal_gender().empty()) {
    const std::string& _s = this->_internal_gender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CreateCharacterRequest.gender");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string realm = 4;
  if (!this->_internal_realm().empty()) {
    const std::string& _s = this->_internal_realm();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CreateCharacterRequest.realm");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // .sro.gamebackend.DimensionTarget dimension = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::dimension(this),
        _Internal::dimension(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.CreateCharacterRequest)
  return target;
}

::size_t CreateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.CreateCharacterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string gender = 3;
  if (!this->_internal_gender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_gender());
  }

  // string realm = 4;
  if (!this->_internal_realm().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_realm());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sro.UserTarget owner = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.owner_);
    }

    // .sro.gamebackend.DimensionTarget dimension = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.dimension_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCharacterRequest::GetClassData() const { return &_class_data_; }


void CreateCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateCharacterRequest*>(&to_msg);
  auto& from = static_cast<const CreateCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.CreateCharacterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_gender().empty()) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (!from._internal_realm().empty()) {
    _this->_internal_set_realm(from._internal_realm());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_owner()->::sro::UserTarget::MergeFrom(
          from._internal_owner());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_dimension()->::sro::gamebackend::DimensionTarget::MergeFrom(
          from._internal_dimension());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCharacterRequest::CopyFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterRequest::IsInitialized() const {
  return true;
}

void CreateCharacterRequest::InternalSwap(CreateCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gender_, lhs_arena,
                                       &other->_impl_.gender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.realm_, lhs_arena,
                                       &other->_impl_.realm_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, _impl_.dimension_)
      + sizeof(CreateCharacterRequest::_impl_.dimension_)
      - PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, _impl_.owner_)>(
          reinterpret_cast<char*>(&_impl_.owner_),
          reinterpret_cast<char*>(&other->_impl_.owner_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[2]);
}
// ===================================================================

class CharacterTarget::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sro::character::CharacterTarget, _impl_._oneof_case_);
};

CharacterTarget::CharacterTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.CharacterTarget)
}
CharacterTarget::CharacterTarget(const CharacterTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterTarget* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kId: {
      _this->_internal_set_id(from._internal_id());
      break;
    }
    case kName: {
      _this->_internal_set_name(from._internal_name());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sro.character.CharacterTarget)
}

inline void CharacterTarget::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_type();
}

CharacterTarget::~CharacterTarget() {
  // @@protoc_insertion_point(destructor:sro.character.CharacterTarget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterTarget::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_type()) {
    clear_type();
  }
}

void CharacterTarget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterTarget::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.CharacterTarget)
  switch (type_case()) {
    case kId: {
      // No need to clear
      break;
    }
    case kName: {
      _impl_.type_.name_.Destroy();
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


void CharacterTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.CharacterTarget)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterTarget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _internal_set_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterTarget.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CharacterTarget::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.CharacterTarget)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (type_case()) {
    case kId: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this->_internal_id(), target);
      break;
    }
    case kName: {
      const std::string& _s = this->_internal_name();
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterTarget.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.CharacterTarget)
  return target;
}

::size_t CharacterTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.CharacterTarget)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // uint64 id = 1;
    case kId: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_id());
      break;
    }
    // string name = 2;
    case kName: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterTarget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterTarget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterTarget::GetClassData() const { return &_class_data_; }


void CharacterTarget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterTarget*>(&to_msg);
  auto& from = static_cast<const CharacterTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.CharacterTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kId: {
      _this->_internal_set_id(from._internal_id());
      break;
    }
    case kName: {
      _this->_internal_set_name(from._internal_name());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterTarget::CopyFrom(const CharacterTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.CharacterTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterTarget::IsInitialized() const {
  return true;
}

void CharacterTarget::InternalSwap(CharacterTarget* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[3]);
}
// ===================================================================

class EditCharacterRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<EditCharacterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EditCharacterRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sro::character::EditCharacterRequest, _impl_._oneof_case_);
  static const ::sro::character::CharacterTarget& target(const EditCharacterRequest* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sro::Location& location(const EditCharacterRequest* msg);
  static const ::sro::gamebackend::DimensionTarget& dimension(const EditCharacterRequest* msg);
};

const ::sro::character::CharacterTarget&
EditCharacterRequest::_Internal::target(const EditCharacterRequest* msg) {
  return *msg->_impl_.target_;
}
const ::sro::Location&
EditCharacterRequest::_Internal::location(const EditCharacterRequest* msg) {
  return *msg->_impl_.optional_location_.location_;
}
const ::sro::gamebackend::DimensionTarget&
EditCharacterRequest::_Internal::dimension(const EditCharacterRequest* msg) {
  return *msg->_impl_.optional_dimension_.dimension_;
}
void EditCharacterRequest::set_allocated_location(::sro::Location* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_optional_location();
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location));
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    set_has_location();
    _impl_.optional_location_.location_ = location;
  }
  // @@protoc_insertion_point(field_set_allocated:sro.character.EditCharacterRequest.location)
}
void EditCharacterRequest::clear_location() {
  if (optional_location_case() == kLocation) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.optional_location_.location_;
    }
    clear_has_optional_location();
  }
}
void EditCharacterRequest::set_allocated_dimension(::sro::gamebackend::DimensionTarget* dimension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_optional_dimension();
  if (dimension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dimension));
    if (message_arena != submessage_arena) {
      dimension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension, submessage_arena);
    }
    set_has_dimension();
    _impl_.optional_dimension_.dimension_ = dimension;
  }
  // @@protoc_insertion_point(field_set_allocated:sro.character.EditCharacterRequest.dimension)
}
void EditCharacterRequest::clear_dimension() {
  if (optional_dimension_case() == kDimension) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.optional_dimension_.dimension_;
    }
    clear_has_optional_dimension();
  }
}
EditCharacterRequest::EditCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.EditCharacterRequest)
}
EditCharacterRequest::EditCharacterRequest(const EditCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EditCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.optional_owner_id_){}
    , decltype(_impl_.optional_new_name_){}
    , decltype(_impl_.optional_gender_){}
    , decltype(_impl_.optional_realm_){}
    , decltype(_impl_.optional_play_time_){}
    , decltype(_impl_.optional_location_){}
    , decltype(_impl_.optional_dimension_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.target_ = new ::sro::character::CharacterTarget(*from._impl_.target_);
  }
  clear_has_optional_owner_id();
  switch (from.optional_owner_id_case()) {
    case kOwnerId: {
      _this->_internal_set_owner_id(from._internal_owner_id());
      break;
    }
    case OPTIONAL_OWNER_ID_NOT_SET: {
      break;
    }
  }
  clear_has_optional_new_name();
  switch (from.optional_new_name_case()) {
    case kNewName: {
      _this->_internal_set_new_name(from._internal_new_name());
      break;
    }
    case OPTIONAL_NEW_NAME_NOT_SET: {
      break;
    }
  }
  clear_has_optional_gender();
  switch (from.optional_gender_case()) {
    case kGender: {
      _this->_internal_set_gender(from._internal_gender());
      break;
    }
    case OPTIONAL_GENDER_NOT_SET: {
      break;
    }
  }
  clear_has_optional_realm();
  switch (from.optional_realm_case()) {
    case kRealm: {
      _this->_internal_set_realm(from._internal_realm());
      break;
    }
    case OPTIONAL_REALM_NOT_SET: {
      break;
    }
  }
  clear_has_optional_play_time();
  switch (from.optional_play_time_case()) {
    case kPlayTime: {
      _this->_internal_set_play_time(from._internal_play_time());
      break;
    }
    case OPTIONAL_PLAY_TIME_NOT_SET: {
      break;
    }
  }
  clear_has_optional_location();
  switch (from.optional_location_case()) {
    case kLocation: {
      _this->_internal_mutable_location()->::sro::Location::MergeFrom(
          from._internal_location());
      break;
    }
    case OPTIONAL_LOCATION_NOT_SET: {
      break;
    }
  }
  clear_has_optional_dimension();
  switch (from.optional_dimension_case()) {
    case kDimension: {
      _this->_internal_mutable_dimension()->::sro::gamebackend::DimensionTarget::MergeFrom(
          from._internal_dimension());
      break;
    }
    case OPTIONAL_DIMENSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sro.character.EditCharacterRequest)
}

inline void EditCharacterRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.optional_owner_id_){}
    , decltype(_impl_.optional_new_name_){}
    , decltype(_impl_.optional_gender_){}
    , decltype(_impl_.optional_realm_){}
    , decltype(_impl_.optional_play_time_){}
    , decltype(_impl_.optional_location_){}
    , decltype(_impl_.optional_dimension_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_optional_owner_id();
  clear_has_optional_new_name();
  clear_has_optional_gender();
  clear_has_optional_realm();
  clear_has_optional_play_time();
  clear_has_optional_location();
  clear_has_optional_dimension();
}

EditCharacterRequest::~EditCharacterRequest() {
  // @@protoc_insertion_point(destructor:sro.character.EditCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EditCharacterRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.target_;
  if (has_optional_owner_id()) {
    clear_optional_owner_id();
  }
  if (has_optional_new_name()) {
    clear_optional_new_name();
  }
  if (has_optional_gender()) {
    clear_optional_gender();
  }
  if (has_optional_realm()) {
    clear_optional_realm();
  }
  if (has_optional_play_time()) {
    clear_optional_play_time();
  }
  if (has_optional_location()) {
    clear_optional_location();
  }
  if (has_optional_dimension()) {
    clear_optional_dimension();
  }
}

void EditCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EditCharacterRequest::clear_optional_owner_id() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_owner_id_case()) {
    case kOwnerId: {
      _impl_.optional_owner_id_.owner_id_.Destroy();
      break;
    }
    case OPTIONAL_OWNER_ID_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTIONAL_OWNER_ID_NOT_SET;
}

void EditCharacterRequest::clear_optional_new_name() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_new_name_case()) {
    case kNewName: {
      _impl_.optional_new_name_.new_name_.Destroy();
      break;
    }
    case OPTIONAL_NEW_NAME_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = OPTIONAL_NEW_NAME_NOT_SET;
}

void EditCharacterRequest::clear_optional_gender() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_gender_case()) {
    case kGender: {
      _impl_.optional_gender_.gender_.Destroy();
      break;
    }
    case OPTIONAL_GENDER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[2] = OPTIONAL_GENDER_NOT_SET;
}

void EditCharacterRequest::clear_optional_realm() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_realm_case()) {
    case kRealm: {
      _impl_.optional_realm_.realm_.Destroy();
      break;
    }
    case OPTIONAL_REALM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[3] = OPTIONAL_REALM_NOT_SET;
}

void EditCharacterRequest::clear_optional_play_time() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_play_time_case()) {
    case kPlayTime: {
      // No need to clear
      break;
    }
    case OPTIONAL_PLAY_TIME_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[4] = OPTIONAL_PLAY_TIME_NOT_SET;
}

void EditCharacterRequest::clear_optional_location() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_location_case()) {
    case kLocation: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.optional_location_.location_;
      }
      break;
    }
    case OPTIONAL_LOCATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[5] = OPTIONAL_LOCATION_NOT_SET;
}

void EditCharacterRequest::clear_optional_dimension() {
// @@protoc_insertion_point(one_of_clear_start:sro.character.EditCharacterRequest)
  switch (optional_dimension_case()) {
    case kDimension: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.optional_dimension_.dimension_;
      }
      break;
    }
    case OPTIONAL_DIMENSION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[6] = OPTIONAL_DIMENSION_NOT_SET;
}


void EditCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.EditCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_ != nullptr);
    _impl_.target_->Clear();
  }
  clear_optional_owner_id();
  clear_optional_new_name();
  clear_optional_gender();
  clear_optional_realm();
  clear_optional_play_time();
  clear_optional_location();
  clear_optional_dimension();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EditCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .sro.character.CharacterTarget target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string owner_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_owner_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.EditCharacterRequest.owner_id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string new_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_new_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.EditCharacterRequest.new_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string gender = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_gender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.EditCharacterRequest.gender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string realm = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_realm();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.EditCharacterRequest.realm"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 play_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _internal_set_play_time(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .sro.Location location = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .sro.gamebackend.DimensionTarget dimension = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_dimension(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* EditCharacterRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.EditCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sro.character.CharacterTarget target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // string owner_id = 3;
  if (optional_owner_id_case() == kOwnerId) {
    const std::string& _s = this->_internal_owner_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.EditCharacterRequest.owner_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string new_name = 4;
  if (optional_new_name_case() == kNewName) {
    const std::string& _s = this->_internal_new_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.EditCharacterRequest.new_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string gender = 5;
  if (optional_gender_case() == kGender) {
    const std::string& _s = this->_internal_gender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.EditCharacterRequest.gender");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string realm = 6;
  if (optional_realm_case() == kRealm) {
    const std::string& _s = this->_internal_realm();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.EditCharacterRequest.realm");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // uint64 play_time = 7;
  if (optional_play_time_case() == kPlayTime) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_play_time(), target);
  }

  // .sro.Location location = 8;
  if (optional_location_case() == kLocation) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // .sro.gamebackend.DimensionTarget dimension = 9;
  if (optional_dimension_case() == kDimension) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::dimension(this),
        _Internal::dimension(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.EditCharacterRequest)
  return target;
}

::size_t EditCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.EditCharacterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sro.character.CharacterTarget target = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.target_);
  }

  switch (optional_owner_id_case()) {
    // string owner_id = 3;
    case kOwnerId: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_owner_id());
      break;
    }
    case OPTIONAL_OWNER_ID_NOT_SET: {
      break;
    }
  }
  switch (optional_new_name_case()) {
    // string new_name = 4;
    case kNewName: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_new_name());
      break;
    }
    case OPTIONAL_NEW_NAME_NOT_SET: {
      break;
    }
  }
  switch (optional_gender_case()) {
    // string gender = 5;
    case kGender: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_gender());
      break;
    }
    case OPTIONAL_GENDER_NOT_SET: {
      break;
    }
  }
  switch (optional_realm_case()) {
    // string realm = 6;
    case kRealm: {
      total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                      this->_internal_realm());
      break;
    }
    case OPTIONAL_REALM_NOT_SET: {
      break;
    }
  }
  switch (optional_play_time_case()) {
    // uint64 play_time = 7;
    case kPlayTime: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_play_time());
      break;
    }
    case OPTIONAL_PLAY_TIME_NOT_SET: {
      break;
    }
  }
  switch (optional_location_case()) {
    // .sro.Location location = 8;
    case kLocation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.optional_location_.location_);
      break;
    }
    case OPTIONAL_LOCATION_NOT_SET: {
      break;
    }
  }
  switch (optional_dimension_case()) {
    // .sro.gamebackend.DimensionTarget dimension = 9;
    case kDimension: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.optional_dimension_.dimension_);
      break;
    }
    case OPTIONAL_DIMENSION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EditCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EditCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EditCharacterRequest::GetClassData() const { return &_class_data_; }


void EditCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EditCharacterRequest*>(&to_msg);
  auto& from = static_cast<const EditCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.EditCharacterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_target()->::sro::character::CharacterTarget::MergeFrom(
        from._internal_target());
  }
  switch (from.optional_owner_id_case()) {
    case kOwnerId: {
      _this->_internal_set_owner_id(from._internal_owner_id());
      break;
    }
    case OPTIONAL_OWNER_ID_NOT_SET: {
      break;
    }
  }
  switch (from.optional_new_name_case()) {
    case kNewName: {
      _this->_internal_set_new_name(from._internal_new_name());
      break;
    }
    case OPTIONAL_NEW_NAME_NOT_SET: {
      break;
    }
  }
  switch (from.optional_gender_case()) {
    case kGender: {
      _this->_internal_set_gender(from._internal_gender());
      break;
    }
    case OPTIONAL_GENDER_NOT_SET: {
      break;
    }
  }
  switch (from.optional_realm_case()) {
    case kRealm: {
      _this->_internal_set_realm(from._internal_realm());
      break;
    }
    case OPTIONAL_REALM_NOT_SET: {
      break;
    }
  }
  switch (from.optional_play_time_case()) {
    case kPlayTime: {
      _this->_internal_set_play_time(from._internal_play_time());
      break;
    }
    case OPTIONAL_PLAY_TIME_NOT_SET: {
      break;
    }
  }
  switch (from.optional_location_case()) {
    case kLocation: {
      _this->_internal_mutable_location()->::sro::Location::MergeFrom(
          from._internal_location());
      break;
    }
    case OPTIONAL_LOCATION_NOT_SET: {
      break;
    }
  }
  switch (from.optional_dimension_case()) {
    case kDimension: {
      _this->_internal_mutable_dimension()->::sro::gamebackend::DimensionTarget::MergeFrom(
          from._internal_dimension());
      break;
    }
    case OPTIONAL_DIMENSION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EditCharacterRequest::CopyFrom(const EditCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.EditCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditCharacterRequest::IsInitialized() const {
  return true;
}

void EditCharacterRequest::InternalSwap(EditCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_, other->_impl_.target_);
  swap(_impl_.optional_owner_id_, other->_impl_.optional_owner_id_);
  swap(_impl_.optional_new_name_, other->_impl_.optional_new_name_);
  swap(_impl_.optional_gender_, other->_impl_.optional_gender_);
  swap(_impl_.optional_realm_, other->_impl_.optional_realm_);
  swap(_impl_.optional_play_time_, other->_impl_.optional_play_time_);
  swap(_impl_.optional_location_, other->_impl_.optional_location_);
  swap(_impl_.optional_dimension_, other->_impl_.optional_dimension_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
  swap(_impl_._oneof_case_[2], other->_impl_._oneof_case_[2]);
  swap(_impl_._oneof_case_[3], other->_impl_._oneof_case_[3]);
  swap(_impl_._oneof_case_[4], other->_impl_._oneof_case_[4]);
  swap(_impl_._oneof_case_[5], other->_impl_._oneof_case_[5]);
  swap(_impl_._oneof_case_[6], other->_impl_._oneof_case_[6]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EditCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[4]);
}
// ===================================================================

class CharacterDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CharacterDetails, _impl_._has_bits_);
  static const ::sro::Location& location(const CharacterDetails* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sro::Location&
CharacterDetails::_Internal::location(const CharacterDetails* msg) {
  return *msg->_impl_.location_;
}
void CharacterDetails::clear_location() {
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CharacterDetails::CharacterDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.CharacterDetails)
}
CharacterDetails::CharacterDetails(const CharacterDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterDetails* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.owner_) {}

    , decltype(_impl_.name_) {}

    , decltype(_impl_.gender_) {}

    , decltype(_impl_.realm_) {}

    , decltype(_impl_.dimension_) {}

    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.id_) {}

    , decltype(_impl_.play_time_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    _this->_impl_.owner_.Set(from._internal_owner(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gender().empty()) {
    _this->_impl_.gender_.Set(from._internal_gender(), _this->GetArenaForAllocation());
  }
  _impl_.realm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_realm().empty()) {
    _this->_impl_.realm_.Set(from._internal_realm(), _this->GetArenaForAllocation());
  }
  _impl_.dimension_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimension_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dimension().empty()) {
    _this->_impl_.dimension_.Set(from._internal_dimension(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.location_ = new ::sro::Location(*from._impl_.location_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.play_time_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.play_time_));
  // @@protoc_insertion_point(copy_constructor:sro.character.CharacterDetails)
}

inline void CharacterDetails::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.owner_) {}

    , decltype(_impl_.name_) {}

    , decltype(_impl_.gender_) {}

    , decltype(_impl_.realm_) {}

    , decltype(_impl_.dimension_) {}

    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.id_) { ::uint64_t{0u} }

    , decltype(_impl_.play_time_) { ::uint64_t{0u} }

  };
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.realm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.realm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimension_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimension_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CharacterDetails::~CharacterDetails() {
  // @@protoc_insertion_point(destructor:sro.character.CharacterDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterDetails::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.owner_.Destroy();
  _impl_.name_.Destroy();
  _impl_.gender_.Destroy();
  _impl_.realm_.Destroy();
  _impl_.dimension_.Destroy();
  if (this != internal_default_instance()) delete _impl_.location_;
}

void CharacterDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.CharacterDetails)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.gender_.ClearToEmpty();
  _impl_.realm_.ClearToEmpty();
  _impl_.dimension_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.play_time_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.play_time_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterDetails.owner"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterDetails.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string gender = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_gender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterDetails.gender"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string realm = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_realm();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterDetails.realm"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 play_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.play_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .sro.Location location = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string dimension = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_dimension();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.CharacterDetails.dimension"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CharacterDetails::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.CharacterDetails)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // string owner = 2;
  if (!this->_internal_owner().empty()) {
    const std::string& _s = this->_internal_owner();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterDetails.owner");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterDetails.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string gender = 4;
  if (!this->_internal_gender().empty()) {
    const std::string& _s = this->_internal_gender();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterDetails.gender");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string realm = 5;
  if (!this->_internal_realm().empty()) {
    const std::string& _s = this->_internal_realm();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterDetails.realm");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // uint64 play_time = 6;
  if (this->_internal_play_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_play_time(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sro.Location location = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // string dimension = 9;
  if (!this->_internal_dimension().empty()) {
    const std::string& _s = this->_internal_dimension();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.CharacterDetails.dimension");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.CharacterDetails)
  return target;
}

::size_t CharacterDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.CharacterDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner = 2;
  if (!this->_internal_owner().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string gender = 4;
  if (!this->_internal_gender().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_gender());
  }

  // string realm = 5;
  if (!this->_internal_realm().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_realm());
  }

  // string dimension = 9;
  if (!this->_internal_dimension().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_dimension());
  }

  // .sro.Location location = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.location_);
  }

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // uint64 play_time = 6;
  if (this->_internal_play_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_play_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDetails::GetClassData() const { return &_class_data_; }


void CharacterDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterDetails*>(&to_msg);
  auto& from = static_cast<const CharacterDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.CharacterDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_gender().empty()) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (!from._internal_realm().empty()) {
    _this->_internal_set_realm(from._internal_realm());
  }
  if (!from._internal_dimension().empty()) {
    _this->_internal_set_dimension(from._internal_dimension());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_location()->::sro::Location::MergeFrom(
        from._internal_location());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_play_time() != 0) {
    _this->_internal_set_play_time(from._internal_play_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDetails::CopyFrom(const CharacterDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.CharacterDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDetails::IsInitialized() const {
  return true;
}

void CharacterDetails::InternalSwap(CharacterDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, lhs_arena,
                                       &other->_impl_.owner_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gender_, lhs_arena,
                                       &other->_impl_.gender_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.realm_, lhs_arena,
                                       &other->_impl_.realm_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimension_, lhs_arena,
                                       &other->_impl_.dimension_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterDetails, _impl_.play_time_)
      + sizeof(CharacterDetails::_impl_.play_time_)
      - PROTOBUF_FIELD_OFFSET(CharacterDetails, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[5]);
}
// ===================================================================

class CharactersDetails::_Internal {
 public:
};

CharactersDetails::CharactersDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.CharactersDetails)
}
CharactersDetails::CharactersDetails(const CharactersDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharactersDetails* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.characters_){from._impl_.characters_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sro.character.CharactersDetails)
}

inline void CharactersDetails::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.characters_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharactersDetails::~CharactersDetails() {
  // @@protoc_insertion_point(destructor:sro.character.CharactersDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharactersDetails::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_characters()->~RepeatedPtrField();
}

void CharactersDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharactersDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.CharactersDetails)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_characters()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharactersDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .sro.character.CharacterDetails characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CharactersDetails::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.CharactersDetails)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sro.character.CharacterDetails characters = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_characters_size()); i < n; i++) {
    const auto& repfield = this->_internal_characters(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.CharactersDetails)
  return target;
}

::size_t CharactersDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.CharactersDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sro.character.CharacterDetails characters = 1;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->_internal_characters()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharactersDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharactersDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharactersDetails::GetClassData() const { return &_class_data_; }


void CharactersDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharactersDetails*>(&to_msg);
  auto& from = static_cast<const CharactersDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.CharactersDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characters()->MergeFrom(from._internal_characters());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharactersDetails::CopyFrom(const CharactersDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.CharactersDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharactersDetails::IsInitialized() const {
  return true;
}

void CharactersDetails::InternalSwap(CharactersDetails* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_characters()->InternalSwap(other->_internal_mutable_characters());
}

::PROTOBUF_NAMESPACE_ID::Metadata CharactersDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[6]);
}
// ===================================================================

class InventoryItem::_Internal {
 public:
};

InventoryItem::InventoryItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.InventoryItem)
}
InventoryItem::InventoryItem(const InventoryItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InventoryItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) {}

    , decltype(_impl_.quantity_) {}

    , decltype(_impl_.slot_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.quantity_, &from._impl_.quantity_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.slot_) -
    reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.slot_));
  // @@protoc_insertion_point(copy_constructor:sro.character.InventoryItem)
}

inline void InventoryItem::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) {}

    , decltype(_impl_.quantity_) { ::uint64_t{0u} }

    , decltype(_impl_.slot_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InventoryItem::~InventoryItem() {
  // @@protoc_insertion_point(destructor:sro.character.InventoryItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InventoryItem::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void InventoryItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InventoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.InventoryItem)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.slot_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.slot_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InventoryItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sro.character.InventoryItem.id"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 slot = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.slot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint64 quantity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* InventoryItem::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.InventoryItem)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "sro.character.InventoryItem.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 slot = 2;
  if (this->_internal_slot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_slot(), target);
  }

  // uint64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.InventoryItem)
  return target;
}

::size_t InventoryItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.InventoryItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // uint64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_quantity());
  }

  // uint32 slot = 2;
  if (this->_internal_slot() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_slot());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InventoryItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InventoryItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InventoryItem::GetClassData() const { return &_class_data_; }


void InventoryItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InventoryItem*>(&to_msg);
  auto& from = static_cast<const InventoryItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.InventoryItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_slot() != 0) {
    _this->_internal_set_slot(from._internal_slot());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryItem::CopyFrom(const InventoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.InventoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InventoryItem::IsInitialized() const {
  return true;
}

void InventoryItem::InternalSwap(InventoryItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.slot_)
      + sizeof(InventoryItem::_impl_.slot_)
      - PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InventoryItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[7]);
}
// ===================================================================

class Inventory::_Internal {
 public:
};

Inventory::Inventory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.Inventory)
}
Inventory::Inventory(const Inventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Inventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inventory_items_){from._impl_.inventory_items_}
    , decltype(_impl_.bank_items_){from._impl_.bank_items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sro.character.Inventory)
}

inline void Inventory::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.inventory_items_){arena}
    , decltype(_impl_.bank_items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Inventory::~Inventory() {
  // @@protoc_insertion_point(destructor:sro.character.Inventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Inventory::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_inventory_items()->~RepeatedPtrField();
  _internal_mutable_bank_items()->~RepeatedPtrField();
}

void Inventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Inventory::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.Inventory)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_inventory_items()->Clear();
  _internal_mutable_bank_items()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Inventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .sro.character.InventoryItem inventory_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inventory_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .sro.character.InventoryItem bank_items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bank_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Inventory::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.Inventory)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sro.character.InventoryItem inventory_items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inventory_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_inventory_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sro.character.InventoryItem bank_items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bank_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_bank_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.Inventory)
  return target;
}

::size_t Inventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.Inventory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sro.character.InventoryItem inventory_items = 1;
  total_size += 1UL * this->_internal_inventory_items_size();
  for (const auto& msg : this->_internal_inventory_items()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .sro.character.InventoryItem bank_items = 2;
  total_size += 1UL * this->_internal_bank_items_size();
  for (const auto& msg : this->_internal_bank_items()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Inventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Inventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Inventory::GetClassData() const { return &_class_data_; }


void Inventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Inventory*>(&to_msg);
  auto& from = static_cast<const Inventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.Inventory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventory_items()->MergeFrom(from._internal_inventory_items());
  _this->_internal_mutable_bank_items()->MergeFrom(from._internal_bank_items());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Inventory::CopyFrom(const Inventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.Inventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inventory::IsInitialized() const {
  return true;
}

void Inventory::InternalSwap(Inventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_inventory_items()->InternalSwap(other->_internal_mutable_inventory_items());
  _internal_mutable_bank_items()->InternalSwap(other->_internal_mutable_bank_items());
}

::PROTOBUF_NAMESPACE_ID::Metadata Inventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[8]);
}
// ===================================================================

class UpdateInventoryRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateInventoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateInventoryRequest, _impl_._has_bits_);
  static const ::sro::character::CharacterTarget& target(const UpdateInventoryRequest* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sro::character::CharacterTarget&
UpdateInventoryRequest::_Internal::target(const UpdateInventoryRequest* msg) {
  return *msg->_impl_.target_;
}
UpdateInventoryRequest::UpdateInventoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sro.character.UpdateInventoryRequest)
}
UpdateInventoryRequest::UpdateInventoryRequest(const UpdateInventoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateInventoryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.inventory_items_){from._impl_.inventory_items_}
    , decltype(_impl_.bank_items_){from._impl_.bank_items_}
    , decltype(_impl_.target_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.target_ = new ::sro::character::CharacterTarget(*from._impl_.target_);
  }
  // @@protoc_insertion_point(copy_constructor:sro.character.UpdateInventoryRequest)
}

inline void UpdateInventoryRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.inventory_items_){arena}
    , decltype(_impl_.bank_items_){arena}
    , decltype(_impl_.target_){nullptr}
  };
}

UpdateInventoryRequest::~UpdateInventoryRequest() {
  // @@protoc_insertion_point(destructor:sro.character.UpdateInventoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateInventoryRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_inventory_items()->~RepeatedPtrField();
  _internal_mutable_bank_items()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.target_;
}

void UpdateInventoryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sro.character.UpdateInventoryRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_inventory_items()->Clear();
  _internal_mutable_bank_items()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_ != nullptr);
    _impl_.target_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateInventoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .sro.character.CharacterTarget target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .sro.character.InventoryItem inventory_items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inventory_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated .sro.character.InventoryItem bank_items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bank_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* UpdateInventoryRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sro.character.UpdateInventoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sro.character.CharacterTarget target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // repeated .sro.character.InventoryItem inventory_items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inventory_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_inventory_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sro.character.InventoryItem bank_items = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bank_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_bank_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sro.character.UpdateInventoryRequest)
  return target;
}

::size_t UpdateInventoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sro.character.UpdateInventoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sro.character.InventoryItem inventory_items = 2;
  total_size += 1UL * this->_internal_inventory_items_size();
  for (const auto& msg : this->_internal_inventory_items()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .sro.character.InventoryItem bank_items = 3;
  total_size += 1UL * this->_internal_bank_items_size();
  for (const auto& msg : this->_internal_bank_items()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .sro.character.CharacterTarget target = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.target_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateInventoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateInventoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateInventoryRequest::GetClassData() const { return &_class_data_; }


void UpdateInventoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateInventoryRequest*>(&to_msg);
  auto& from = static_cast<const UpdateInventoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sro.character.UpdateInventoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventory_items()->MergeFrom(from._internal_inventory_items());
  _this->_internal_mutable_bank_items()->MergeFrom(from._internal_bank_items());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_target()->::sro::character::CharacterTarget::MergeFrom(
        from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateInventoryRequest::CopyFrom(const UpdateInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sro.character.UpdateInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInventoryRequest::IsInitialized() const {
  return true;
}

void UpdateInventoryRequest::InternalSwap(UpdateInventoryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_inventory_items()->InternalSwap(other->_internal_mutable_inventory_items());
  _internal_mutable_bank_items()->InternalSwap(other->_internal_mutable_bank_items());
  swap(_impl_.target_, other->_impl_.target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInventoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_getter, &descriptor_table_sro_2fcharacter_2fcharacter_2eproto_once,
      file_level_metadata_sro_2fcharacter_2fcharacter_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace character
}  // namespace sro
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sro::character::PlayTimeResponse*
Arena::CreateMaybeMessage< ::sro::character::PlayTimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::PlayTimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::AddPlayTimeRequest*
Arena::CreateMaybeMessage< ::sro::character::AddPlayTimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::AddPlayTimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::CreateCharacterRequest*
Arena::CreateMaybeMessage< ::sro::character::CreateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::CreateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::CharacterTarget*
Arena::CreateMaybeMessage< ::sro::character::CharacterTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::CharacterTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::EditCharacterRequest*
Arena::CreateMaybeMessage< ::sro::character::EditCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::EditCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::CharacterDetails*
Arena::CreateMaybeMessage< ::sro::character::CharacterDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::CharacterDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::CharactersDetails*
Arena::CreateMaybeMessage< ::sro::character::CharactersDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::CharactersDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::InventoryItem*
Arena::CreateMaybeMessage< ::sro::character::InventoryItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::InventoryItem >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::Inventory*
Arena::CreateMaybeMessage< ::sro::character::Inventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::Inventory >(arena);
}
template<> PROTOBUF_NOINLINE ::sro::character::UpdateInventoryRequest*
Arena::CreateMaybeMessage< ::sro::character::UpdateInventoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sro::character::UpdateInventoryRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
