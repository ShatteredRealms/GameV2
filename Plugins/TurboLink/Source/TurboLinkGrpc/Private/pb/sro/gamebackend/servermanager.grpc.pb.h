// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sro/gamebackend/servermanager.proto
#ifndef GRPC_sro_2fgamebackend_2fservermanager_2eproto__INCLUDED
#define GRPC_sro_2fgamebackend_2fservermanager_2eproto__INCLUDED

#include "sro/gamebackend/servermanager.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sro {
namespace gamebackend {

class ServerManagerService final {
 public:
  static constexpr char const* service_full_name() {
    return "sro.gamebackend.ServerManagerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::sro::gamebackend::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> AsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(AsyncCreateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> PrepareAsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(PrepareAsyncCreateDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::sro::gamebackend::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> AsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(AsyncDuplicateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> PrepareAsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(PrepareAsyncDuplicateDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::sro::gamebackend::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> AsyncGetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(AsyncGetDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> PrepareAsyncGetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(PrepareAsyncGetDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gamebackend::Dimensions* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>> AsyncGetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>>(AsyncGetAllDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>> PrepareAsyncGetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>>(PrepareAsyncGetAllDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::sro::gamebackend::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> AsyncEditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(AsyncEditDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>> PrepareAsyncEditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>>(PrepareAsyncEditDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::sro::gamebackend::Map* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> AsyncCreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(AsyncCreateMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> PrepareAsyncCreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(PrepareAsyncCreateMapRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::sro::gamebackend::Map* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> AsyncGetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(AsyncGetMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> PrepareAsyncGetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(PrepareAsyncGetMapRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gamebackend::Maps* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>> AsyncGetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>>(AsyncGetAllMapsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>> PrepareAsyncGetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>>(PrepareAsyncGetAllMapsRaw(context, request, cq));
    }
    virtual ::grpc::Status EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::sro::gamebackend::Map* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> AsyncEditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(AsyncEditMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>> PrepareAsyncEditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>>(PrepareAsyncEditMapRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteMapRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* AsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* PrepareAsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* AsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* PrepareAsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* AsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* PrepareAsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>* AsyncGetAllDimensionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimensions>* PrepareAsyncGetAllDimensionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* AsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Dimension>* PrepareAsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* AsyncCreateMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* PrepareAsyncCreateMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* AsyncGetMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* PrepareAsyncGetMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>* AsyncGetAllMapsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Maps>* PrepareAsyncGetAllMapsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* AsyncEditMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gamebackend::Map>* PrepareAsyncEditMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::sro::gamebackend::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> AsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(AsyncCreateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> PrepareAsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(PrepareAsyncCreateDimensionRaw(context, request, cq));
    }
    ::grpc::Status DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::sro::gamebackend::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> AsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(AsyncDuplicateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> PrepareAsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(PrepareAsyncDuplicateDimensionRaw(context, request, cq));
    }
    ::grpc::Status GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::sro::gamebackend::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> AsyncGetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(AsyncGetDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> PrepareAsyncGetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(PrepareAsyncGetDimensionRaw(context, request, cq));
    }
    ::grpc::Status GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gamebackend::Dimensions* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>> AsyncGetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>>(AsyncGetAllDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>> PrepareAsyncGetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>>(PrepareAsyncGetAllDimensionRaw(context, request, cq));
    }
    ::grpc::Status EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::sro::gamebackend::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> AsyncEditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(AsyncEditDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>> PrepareAsyncEditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>>(PrepareAsyncEditDimensionRaw(context, request, cq));
    }
    ::grpc::Status DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDimensionRaw(context, request, cq));
    }
    ::grpc::Status CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::sro::gamebackend::Map* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> AsyncCreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(AsyncCreateMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> PrepareAsyncCreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(PrepareAsyncCreateMapRaw(context, request, cq));
    }
    ::grpc::Status GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::sro::gamebackend::Map* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> AsyncGetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(AsyncGetMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> PrepareAsyncGetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(PrepareAsyncGetMapRaw(context, request, cq));
    }
    ::grpc::Status GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gamebackend::Maps* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>> AsyncGetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>>(AsyncGetAllMapsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>> PrepareAsyncGetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>>(PrepareAsyncGetAllMapsRaw(context, request, cq));
    }
    ::grpc::Status EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::sro::gamebackend::Map* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> AsyncEditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(AsyncEditMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>> PrepareAsyncEditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>>(PrepareAsyncEditMapRaw(context, request, cq));
    }
    ::grpc::Status DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteMapRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) override;
      void CreateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) override;
      void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) override;
      void GetDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response, std::function<void(::grpc::Status)>) override;
      void GetAllDimension(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response, std::function<void(::grpc::Status)>) override;
      void EditDimension(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteDimension(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) override;
      void CreateMap(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) override;
      void GetMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response, std::function<void(::grpc::Status)>) override;
      void GetAllMaps(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response, std::function<void(::grpc::Status)>) override;
      void EditMap(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteMap(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* AsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* PrepareAsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* AsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* PrepareAsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* AsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* PrepareAsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>* AsyncGetAllDimensionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimensions>* PrepareAsyncGetAllDimensionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* AsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Dimension>* PrepareAsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::gamebackend::DimensionTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* AsyncCreateMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* PrepareAsyncCreateMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::CreateMapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* AsyncGetMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* PrepareAsyncGetMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>* AsyncGetAllMapsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Maps>* PrepareAsyncGetAllMapsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* AsyncEditMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gamebackend::Map>* PrepareAsyncEditMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::EditMapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteMapRaw(::grpc::ClientContext* context, const ::sro::gamebackend::MapTarget& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_DuplicateDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_EditDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateMap_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMap_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllMaps_;
    const ::grpc::internal::RpcMethod rpcmethod_EditMap_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteMap_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateDimension(::grpc::ServerContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response);
    virtual ::grpc::Status DuplicateDimension(::grpc::ServerContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response);
    virtual ::grpc::Status GetDimension(::grpc::ServerContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response);
    virtual ::grpc::Status GetAllDimension(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response);
    virtual ::grpc::Status EditDimension(::grpc::ServerContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response);
    virtual ::grpc::Status DeleteDimension(::grpc::ServerContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status CreateMap(::grpc::ServerContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response);
    virtual ::grpc::Status GetMap(::grpc::ServerContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response);
    virtual ::grpc::Status GetAllMaps(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response);
    virtual ::grpc::Status EditMap(::grpc::ServerContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response);
    virtual ::grpc::Status DeleteMap(::grpc::ServerContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDimension() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDimension(::grpc::ServerContext* context, ::sro::gamebackend::CreateDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateDimension(::grpc::ServerContext* context, ::sro::gamebackend::DuplicateDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDimension() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimension(::grpc::ServerContext* context, ::sro::gamebackend::DimensionTarget* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDimension(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Dimensions>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EditDimension() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditDimension(::grpc::ServerContext* context, ::sro::gamebackend::EditDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDimension(::grpc::ServerContext* context, ::sro::gamebackend::DimensionTarget* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateMap() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMap(::grpc::ServerContext* context, ::sro::gamebackend::CreateMapRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Map>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMap() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMap(::grpc::ServerContext* context, ::sro::gamebackend::MapTarget* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Map>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllMaps(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Maps>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EditMap() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditMap(::grpc::ServerContext* context, ::sro::gamebackend::EditMapRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gamebackend::Map>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteMap() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMap(::grpc::ServerContext* context, ::sro::gamebackend::MapTarget* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateDimension<WithAsyncMethod_DuplicateDimension<WithAsyncMethod_GetDimension<WithAsyncMethod_GetAllDimension<WithAsyncMethod_EditDimension<WithAsyncMethod_DeleteDimension<WithAsyncMethod_CreateMap<WithAsyncMethod_GetMap<WithAsyncMethod_GetAllMaps<WithAsyncMethod_EditMap<WithAsyncMethod_DeleteMap<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDimension() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::CreateDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::CreateDimensionRequest* request, ::sro::gamebackend::Dimension* response) { return this->CreateDimension(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDimension(
        ::grpc::MessageAllocator< ::sro::gamebackend::CreateDimensionRequest, ::sro::gamebackend::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::CreateDimensionRequest, ::sro::gamebackend::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DuplicateDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::DuplicateDimensionRequest* request, ::sro::gamebackend::Dimension* response) { return this->DuplicateDimension(context, request, response); }));}
    void SetMessageAllocatorFor_DuplicateDimension(
        ::grpc::MessageAllocator< ::sro::gamebackend::DuplicateDimensionRequest, ::sro::gamebackend::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DuplicateDimensionRequest, ::sro::gamebackend::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDimension() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DimensionTarget, ::sro::gamebackend::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::DimensionTarget* request, ::sro::gamebackend::Dimension* response) { return this->GetDimension(context, request, response); }));}
    void SetMessageAllocatorFor_GetDimension(
        ::grpc::MessageAllocator< ::sro::gamebackend::DimensionTarget, ::sro::gamebackend::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DimensionTarget, ::sro::gamebackend::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gamebackend::Dimensions>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Dimensions* response) { return this->GetAllDimension(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllDimension(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::sro::gamebackend::Dimensions>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gamebackend::Dimensions>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EditDimension() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::EditDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::EditDimensionRequest* request, ::sro::gamebackend::Dimension* response) { return this->EditDimension(context, request, response); }));}
    void SetMessageAllocatorFor_EditDimension(
        ::grpc::MessageAllocator< ::sro::gamebackend::EditDimensionRequest, ::sro::gamebackend::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::EditDimensionRequest, ::sro::gamebackend::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DimensionTarget, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::DimensionTarget* request, ::google::protobuf::Empty* response) { return this->DeleteDimension(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDimension(
        ::grpc::MessageAllocator< ::sro::gamebackend::DimensionTarget, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::DimensionTarget, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateMap() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::CreateMapRequest, ::sro::gamebackend::Map>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::CreateMapRequest* request, ::sro::gamebackend::Map* response) { return this->CreateMap(context, request, response); }));}
    void SetMessageAllocatorFor_CreateMap(
        ::grpc::MessageAllocator< ::sro::gamebackend::CreateMapRequest, ::sro::gamebackend::Map>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::CreateMapRequest, ::sro::gamebackend::Map>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMap(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMap() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::MapTarget, ::sro::gamebackend::Map>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::MapTarget* request, ::sro::gamebackend::Map* response) { return this->GetMap(context, request, response); }));}
    void SetMessageAllocatorFor_GetMap(
        ::grpc::MessageAllocator< ::sro::gamebackend::MapTarget, ::sro::gamebackend::Map>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::MapTarget, ::sro::gamebackend::Map>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMap(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gamebackend::Maps>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::sro::gamebackend::Maps* response) { return this->GetAllMaps(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllMaps(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::sro::gamebackend::Maps>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gamebackend::Maps>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllMaps(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EditMap() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::EditMapRequest, ::sro::gamebackend::Map>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::EditMapRequest* request, ::sro::gamebackend::Map* response) { return this->EditMap(context, request, response); }));}
    void SetMessageAllocatorFor_EditMap(
        ::grpc::MessageAllocator< ::sro::gamebackend::EditMapRequest, ::sro::gamebackend::Map>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::EditMapRequest, ::sro::gamebackend::Map>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditMap(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteMap() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::MapTarget, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gamebackend::MapTarget* request, ::google::protobuf::Empty* response) { return this->DeleteMap(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteMap(
        ::grpc::MessageAllocator< ::sro::gamebackend::MapTarget, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gamebackend::MapTarget, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMap(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateDimension<WithCallbackMethod_DuplicateDimension<WithCallbackMethod_GetDimension<WithCallbackMethod_GetAllDimension<WithCallbackMethod_EditDimension<WithCallbackMethod_DeleteDimension<WithCallbackMethod_CreateMap<WithCallbackMethod_GetMap<WithCallbackMethod_GetAllMaps<WithCallbackMethod_EditMap<WithCallbackMethod_DeleteMap<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDimension() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDimension() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EditDimension() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateMap() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMap() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EditMap() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteMap() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDimension() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDimension() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EditDimension() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateMap() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMap() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllMaps(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EditMap() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditMap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteMap() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDimension() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DuplicateDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDimension() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EditDimension() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EditDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateMap() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateMap(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMap() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMap(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllMaps(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllMaps(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EditMap() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EditMap(context, request, response); }));
    }
    ~WithRawCallbackMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditMap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteMap() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteMap(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDimension() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::CreateDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::CreateDimensionRequest, ::sro::gamebackend::Dimension>* streamer) {
                       return this->StreamedCreateDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::CreateDimensionRequest,::sro::gamebackend::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::DuplicateDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::DuplicateDimensionRequest, ::sro::gamebackend::Dimension>* streamer) {
                       return this->StreamedDuplicateDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DuplicateDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDuplicateDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::DuplicateDimensionRequest,::sro::gamebackend::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDimension() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::DimensionTarget, ::sro::gamebackend::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::DimensionTarget, ::sro::gamebackend::Dimension>* streamer) {
                       return this->StreamedGetDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::DimensionTarget,::sro::gamebackend::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllDimension() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::sro::gamebackend::Dimensions>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::sro::gamebackend::Dimensions>* streamer) {
                       return this->StreamedGetAllDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllDimension(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::sro::gamebackend::Dimensions>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EditDimension() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::EditDimensionRequest, ::sro::gamebackend::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::EditDimensionRequest, ::sro::gamebackend::Dimension>* streamer) {
                       return this->StreamedEditDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditDimensionRequest* /*request*/, ::sro::gamebackend::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::EditDimensionRequest,::sro::gamebackend::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::DimensionTarget, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::DimensionTarget, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::DimensionTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::DimensionTarget,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateMap() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::CreateMapRequest, ::sro::gamebackend::Map>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::CreateMapRequest, ::sro::gamebackend::Map>* streamer) {
                       return this->StreamedCreateMap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::CreateMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateMap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::CreateMapRequest,::sro::gamebackend::Map>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMap() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::MapTarget, ::sro::gamebackend::Map>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::MapTarget, ::sro::gamebackend::Map>* streamer) {
                       return this->StreamedGetMap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::MapTarget,::sro::gamebackend::Map>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllMaps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllMaps() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::sro::gamebackend::Maps>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::sro::gamebackend::Maps>* streamer) {
                       return this->StreamedGetAllMaps(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllMaps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllMaps(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gamebackend::Maps* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllMaps(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::sro::gamebackend::Maps>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EditMap() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::EditMapRequest, ::sro::gamebackend::Map>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::EditMapRequest, ::sro::gamebackend::Map>* streamer) {
                       return this->StreamedEditMap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EditMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::EditMapRequest* /*request*/, ::sro::gamebackend::Map* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditMap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::EditMapRequest,::sro::gamebackend::Map>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteMap() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gamebackend::MapTarget, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gamebackend::MapTarget, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteMap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteMap(::grpc::ServerContext* /*context*/, const ::sro::gamebackend::MapTarget* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteMap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gamebackend::MapTarget,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateDimension<WithStreamedUnaryMethod_DuplicateDimension<WithStreamedUnaryMethod_GetDimension<WithStreamedUnaryMethod_GetAllDimension<WithStreamedUnaryMethod_EditDimension<WithStreamedUnaryMethod_DeleteDimension<WithStreamedUnaryMethod_CreateMap<WithStreamedUnaryMethod_GetMap<WithStreamedUnaryMethod_GetAllMaps<WithStreamedUnaryMethod_EditMap<WithStreamedUnaryMethod_DeleteMap<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateDimension<WithStreamedUnaryMethod_DuplicateDimension<WithStreamedUnaryMethod_GetDimension<WithStreamedUnaryMethod_GetAllDimension<WithStreamedUnaryMethod_EditDimension<WithStreamedUnaryMethod_DeleteDimension<WithStreamedUnaryMethod_CreateMap<WithStreamedUnaryMethod_GetMap<WithStreamedUnaryMethod_GetAllMaps<WithStreamedUnaryMethod_EditMap<WithStreamedUnaryMethod_DeleteMap<Service > > > > > > > > > > > StreamedService;
};

}  // namespace gamebackend
}  // namespace sro


#endif  // GRPC_sro_2fgamebackend_2fservermanager_2eproto__INCLUDED
