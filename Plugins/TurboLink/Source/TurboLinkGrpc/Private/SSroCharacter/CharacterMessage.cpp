//Generated by TurboLink CodeGenerator, do not edit!
#include "SSroCharacter/CharacterMessage.h"

FGrpcSroCharacterAddPlayTimeRequest UGrpcSroCharacterAddPlayTimeRequestHelperLibrary::MakeAddPlayTimeRequest( 
    FGrpcSroCharacterCharacterTarget Character, FUInt64 Time 
)
{
    FGrpcSroCharacterAddPlayTimeRequest AddPlayTimeRequest;
    AddPlayTimeRequest.Character = MakeShareable(new FGrpcSroCharacterCharacterTarget(Character));
    AddPlayTimeRequest.Time = Time;

    return AddPlayTimeRequest;
}

void UGrpcSroCharacterAddPlayTimeRequestHelperLibrary::BreakAddPlayTimeRequest(const FGrpcSroCharacterAddPlayTimeRequest& AddPlayTimeRequest,  
    FGrpcSroCharacterCharacterTarget& Character, FUInt64& Time 
)
{
    if(AddPlayTimeRequest.Character.Get()) 
    {
        Character = *(AddPlayTimeRequest.Character.Get());
    }
    Time = AddPlayTimeRequest.Time;
}

FGrpcSroCharacterCharacterTargetType UGrpcSroCharacterCharacterTargetTypeHelperLibrary::MakeType(EGrpcSroCharacterCharacterTargetType TypeCase, 
    FUInt64 Id, FString Name 
)
{
    FGrpcSroCharacterCharacterTargetType Type;
    Type.TypeCase = TypeCase;
    Type.Id = Id;
    Type.Name = Name;

    return Type;
}

void UGrpcSroCharacterCharacterTargetTypeHelperLibrary::BreakType(const FGrpcSroCharacterCharacterTargetType& Type, EGrpcSroCharacterCharacterTargetType& TypeCase, 
    FUInt64& Id, FString& Name 
)
{
    TypeCase = Type.TypeCase;
    Id = Type.Id;
    Name = Type.Name;
}

FGrpcSroCharacterEditCharacterRequestOptional_owner_id UGrpcSroCharacterEditCharacterRequestOptional_owner_idHelperLibrary::MakeOptional_owner_id(EGrpcSroCharacterEditCharacterRequestOptional_owner_id Optional_owner_idCase, 
    FString OwnerId 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_owner_id Optional_owner_id;
    Optional_owner_id.Optional_owner_idCase = Optional_owner_idCase;
    Optional_owner_id.OwnerId = OwnerId;

    return Optional_owner_id;
}

void UGrpcSroCharacterEditCharacterRequestOptional_owner_idHelperLibrary::BreakOptional_owner_id(const FGrpcSroCharacterEditCharacterRequestOptional_owner_id& Optional_owner_id, EGrpcSroCharacterEditCharacterRequestOptional_owner_id& Optional_owner_idCase, 
    FString& OwnerId 
)
{
    Optional_owner_idCase = Optional_owner_id.Optional_owner_idCase;
    OwnerId = Optional_owner_id.OwnerId;
}

FGrpcSroCharacterEditCharacterRequestOptional_new_name UGrpcSroCharacterEditCharacterRequestOptional_new_nameHelperLibrary::MakeOptional_new_name(EGrpcSroCharacterEditCharacterRequestOptional_new_name Optional_new_nameCase, 
    FString NewName 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_new_name Optional_new_name;
    Optional_new_name.Optional_new_nameCase = Optional_new_nameCase;
    Optional_new_name.NewName = NewName;

    return Optional_new_name;
}

void UGrpcSroCharacterEditCharacterRequestOptional_new_nameHelperLibrary::BreakOptional_new_name(const FGrpcSroCharacterEditCharacterRequestOptional_new_name& Optional_new_name, EGrpcSroCharacterEditCharacterRequestOptional_new_name& Optional_new_nameCase, 
    FString& NewName 
)
{
    Optional_new_nameCase = Optional_new_name.Optional_new_nameCase;
    NewName = Optional_new_name.NewName;
}

FGrpcSroCharacterEditCharacterRequestOptional_gender UGrpcSroCharacterEditCharacterRequestOptional_genderHelperLibrary::MakeOptional_gender(EGrpcSroCharacterEditCharacterRequestOptional_gender Optional_genderCase, 
    FString Gender 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_gender Optional_gender;
    Optional_gender.Optional_genderCase = Optional_genderCase;
    Optional_gender.Gender = Gender;

    return Optional_gender;
}

void UGrpcSroCharacterEditCharacterRequestOptional_genderHelperLibrary::BreakOptional_gender(const FGrpcSroCharacterEditCharacterRequestOptional_gender& Optional_gender, EGrpcSroCharacterEditCharacterRequestOptional_gender& Optional_genderCase, 
    FString& Gender 
)
{
    Optional_genderCase = Optional_gender.Optional_genderCase;
    Gender = Optional_gender.Gender;
}

FGrpcSroCharacterEditCharacterRequestOptional_realm UGrpcSroCharacterEditCharacterRequestOptional_realmHelperLibrary::MakeOptional_realm(EGrpcSroCharacterEditCharacterRequestOptional_realm Optional_realmCase, 
    FString Realm 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_realm Optional_realm;
    Optional_realm.Optional_realmCase = Optional_realmCase;
    Optional_realm.Realm = Realm;

    return Optional_realm;
}

void UGrpcSroCharacterEditCharacterRequestOptional_realmHelperLibrary::BreakOptional_realm(const FGrpcSroCharacterEditCharacterRequestOptional_realm& Optional_realm, EGrpcSroCharacterEditCharacterRequestOptional_realm& Optional_realmCase, 
    FString& Realm 
)
{
    Optional_realmCase = Optional_realm.Optional_realmCase;
    Realm = Optional_realm.Realm;
}

FGrpcSroCharacterEditCharacterRequestOptional_play_time UGrpcSroCharacterEditCharacterRequestOptional_play_timeHelperLibrary::MakeOptional_play_time(EGrpcSroCharacterEditCharacterRequestOptional_play_time Optional_play_timeCase, 
    FUInt64 PlayTime 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_play_time Optional_play_time;
    Optional_play_time.Optional_play_timeCase = Optional_play_timeCase;
    Optional_play_time.PlayTime = PlayTime;

    return Optional_play_time;
}

void UGrpcSroCharacterEditCharacterRequestOptional_play_timeHelperLibrary::BreakOptional_play_time(const FGrpcSroCharacterEditCharacterRequestOptional_play_time& Optional_play_time, EGrpcSroCharacterEditCharacterRequestOptional_play_time& Optional_play_timeCase, 
    FUInt64& PlayTime 
)
{
    Optional_play_timeCase = Optional_play_time.Optional_play_timeCase;
    PlayTime = Optional_play_time.PlayTime;
}

FGrpcSroCharacterEditCharacterRequestOptional_location UGrpcSroCharacterEditCharacterRequestOptional_locationHelperLibrary::MakeOptional_location(EGrpcSroCharacterEditCharacterRequestOptional_location Optional_locationCase, 
    FGrpcSroLocation Location 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_location Optional_location;
    Optional_location.Optional_locationCase = Optional_locationCase;
    Optional_location.Location = Location;

    return Optional_location;
}

void UGrpcSroCharacterEditCharacterRequestOptional_locationHelperLibrary::BreakOptional_location(const FGrpcSroCharacterEditCharacterRequestOptional_location& Optional_location, EGrpcSroCharacterEditCharacterRequestOptional_location& Optional_locationCase, 
    FGrpcSroLocation& Location 
)
{
    Optional_locationCase = Optional_location.Optional_locationCase;
    Location = Optional_location.Location;
}

FGrpcSroCharacterEditCharacterRequestOptional_dimension UGrpcSroCharacterEditCharacterRequestOptional_dimensionHelperLibrary::MakeOptional_dimension(EGrpcSroCharacterEditCharacterRequestOptional_dimension Optional_dimensionCase, 
    FGrpcSroGamebackendDimensionTarget Dimension 
)
{
    FGrpcSroCharacterEditCharacterRequestOptional_dimension Optional_dimension;
    Optional_dimension.Optional_dimensionCase = Optional_dimensionCase;
    Optional_dimension.Dimension = Dimension;

    return Optional_dimension;
}

void UGrpcSroCharacterEditCharacterRequestOptional_dimensionHelperLibrary::BreakOptional_dimension(const FGrpcSroCharacterEditCharacterRequestOptional_dimension& Optional_dimension, EGrpcSroCharacterEditCharacterRequestOptional_dimension& Optional_dimensionCase, 
    FGrpcSroGamebackendDimensionTarget& Dimension 
)
{
    Optional_dimensionCase = Optional_dimension.Optional_dimensionCase;
    Dimension = Optional_dimension.Dimension;
}

