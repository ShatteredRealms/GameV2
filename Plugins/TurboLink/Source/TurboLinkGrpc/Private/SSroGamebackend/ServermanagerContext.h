//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroGamebackend/ServermanagerMessage.h"
#include "SSroGamebackend/ServermanagerMarshaling.h"
class GrpcContext_ServerManagerService_CreateDimension : public GrpcContext_Ping_Pong<ServerManagerService_CreateDimension_ReaderWriter, ::sro::gamebackend::Dimension>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_CreateDimension_ReaderWriter, ::sro::gamebackend::Dimension> Super;

private:
	void Call(const FGrpcSroGamebackendCreateDimensionRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_CreateDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_DuplicateDimension : public GrpcContext_Ping_Pong<ServerManagerService_DuplicateDimension_ReaderWriter, ::sro::gamebackend::Dimension>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_DuplicateDimension_ReaderWriter, ::sro::gamebackend::Dimension> Super;

private:
	void Call(const FGrpcSroGamebackendDuplicateDimensionRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_DuplicateDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_GetDimension : public GrpcContext_Ping_Pong<ServerManagerService_GetDimension_ReaderWriter, ::sro::gamebackend::Dimension>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_GetDimension_ReaderWriter, ::sro::gamebackend::Dimension> Super;

private:
	void Call(const FGrpcSroGamebackendDimensionTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_GetDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_GetAllDimension : public GrpcContext_Ping_Pong<ServerManagerService_GetAllDimension_ReaderWriter, ::sro::gamebackend::Dimensions>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_GetAllDimension_ReaderWriter, ::sro::gamebackend::Dimensions> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_GetAllDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_EditDimension : public GrpcContext_Ping_Pong<ServerManagerService_EditDimension_ReaderWriter, ::sro::gamebackend::Dimension>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_EditDimension_ReaderWriter, ::sro::gamebackend::Dimension> Super;

private:
	void Call(const FGrpcSroGamebackendEditDimensionRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_EditDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_DeleteDimension : public GrpcContext_Ping_Pong<ServerManagerService_DeleteDimension_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_DeleteDimension_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroGamebackendDimensionTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_DeleteDimension(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_CreateMap : public GrpcContext_Ping_Pong<ServerManagerService_CreateMap_ReaderWriter, ::sro::gamebackend::Map>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_CreateMap_ReaderWriter, ::sro::gamebackend::Map> Super;

private:
	void Call(const FGrpcSroGamebackendCreateMapRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_CreateMap(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_GetMap : public GrpcContext_Ping_Pong<ServerManagerService_GetMap_ReaderWriter, ::sro::gamebackend::Map>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_GetMap_ReaderWriter, ::sro::gamebackend::Map> Super;

private:
	void Call(const FGrpcSroGamebackendMapTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_GetMap(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_GetAllMaps : public GrpcContext_Ping_Pong<ServerManagerService_GetAllMaps_ReaderWriter, ::sro::gamebackend::Maps>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_GetAllMaps_ReaderWriter, ::sro::gamebackend::Maps> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_GetAllMaps(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_EditMap : public GrpcContext_Ping_Pong<ServerManagerService_EditMap_ReaderWriter, ::sro::gamebackend::Map>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_EditMap_ReaderWriter, ::sro::gamebackend::Map> Super;

private:
	void Call(const FGrpcSroGamebackendEditMapRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_EditMap(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ServerManagerService_DeleteMap : public GrpcContext_Ping_Pong<ServerManagerService_DeleteMap_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UServerManagerServiceClient;
	typedef GrpcContext_Ping_Pong<ServerManagerService_DeleteMap_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroGamebackendMapTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ServerManagerService_DeleteMap(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

