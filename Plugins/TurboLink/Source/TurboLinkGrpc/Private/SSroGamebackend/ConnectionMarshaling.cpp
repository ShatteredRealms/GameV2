//Generated by TurboLink CodeGenerator, do not edit!
#include "ConnectionMarshaling.h"
#include "SGoogleApi/AnnotationsMarshaling.h"
#include "SSroCharacter/CharacterMarshaling.h"
#include "SSro/GlobalsMarshaling.h"

void GRPC_TO_TURBOLINK(const ::sro::gamebackend::ConnectGameServerResponse* in, FGrpcSroGamebackendConnectGameServerResponse* out)
{
    out->Address=UTF8_TO_TCHAR(in->address().c_str());
    out->Port=in->port();
    out->ConnectionId=UTF8_TO_TCHAR(in->connection_id().c_str());
}

void TURBOLINK_TO_GRPC(const FGrpcSroGamebackendConnectGameServerResponse* in, ::sro::gamebackend::ConnectGameServerResponse* out)
{
    out->set_address(TCHAR_TO_UTF8(*(in->Address)));
    out->set_port(in->Port);
    out->set_connection_id(TCHAR_TO_UTF8(*(in->ConnectionId)));
}

void GRPC_TO_TURBOLINK(const ::sro::gamebackend::VerifyConnectRequest* in, FGrpcSroGamebackendVerifyConnectRequest* out)
{
    out->ConnectionId=UTF8_TO_TCHAR(in->connection_id().c_str());
    out->ServerName=UTF8_TO_TCHAR(in->server_name().c_str());
}

void TURBOLINK_TO_GRPC(const FGrpcSroGamebackendVerifyConnectRequest* in, ::sro::gamebackend::VerifyConnectRequest* out)
{
    out->set_connection_id(TCHAR_TO_UTF8(*(in->ConnectionId)));
    out->set_server_name(TCHAR_TO_UTF8(*(in->ServerName)));
}

void GRPC_TO_TURBOLINK(const ::sro::gamebackend::ConnectionStatus* in, FGrpcSroGamebackendConnectionStatus* out)
{
    out->Online=in->online();
}

void TURBOLINK_TO_GRPC(const FGrpcSroGamebackendConnectionStatus* in, ::sro::gamebackend::ConnectionStatus* out)
{
    out->set_online(in->Online);
}

void GRPC_TO_TURBOLINK(const ::sro::gamebackend::TransferPlayerRequest* in, FGrpcSroGamebackendTransferPlayerRequest* out)
{
    out->Character=UTF8_TO_TCHAR(in->character().c_str());
    GRPC_TO_TURBOLINK(&(in->location()), &(out->Location));
}

void TURBOLINK_TO_GRPC(const FGrpcSroGamebackendTransferPlayerRequest* in, ::sro::gamebackend::TransferPlayerRequest* out)
{
    out->set_character(TCHAR_TO_UTF8(*(in->Character)));
    TURBOLINK_TO_GRPC(&(in->Location), out->mutable_location());
}

