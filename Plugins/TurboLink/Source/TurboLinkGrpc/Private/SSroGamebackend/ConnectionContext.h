//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroGamebackend/ConnectionMessage.h"
#include "SSroGamebackend/ConnectionMarshaling.h"
class GrpcContext_ConnectionService_ConnectGameServer : public GrpcContext_Ping_Pong<ConnectionService_ConnectGameServer_ReaderWriter, ::sro::gamebackend::ConnectGameServerResponse>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_ConnectGameServer_ReaderWriter, ::sro::gamebackend::ConnectGameServerResponse> Super;

private:
	void Call(const FGrpcSroCharacterCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_ConnectGameServer(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_VerifyConnect : public GrpcContext_Ping_Pong<ConnectionService_VerifyConnect_ReaderWriter, ::sro::character::CharacterDetails>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_VerifyConnect_ReaderWriter, ::sro::character::CharacterDetails> Super;

private:
	void Call(const FGrpcSroGamebackendVerifyConnectRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_VerifyConnect(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_TransferPlayer : public GrpcContext_Ping_Pong<ConnectionService_TransferPlayer_ReaderWriter, ::sro::gamebackend::ConnectGameServerResponse>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_TransferPlayer_ReaderWriter, ::sro::gamebackend::ConnectGameServerResponse> Super;

private:
	void Call(const FGrpcSroGamebackendTransferPlayerRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_TransferPlayer(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_IsPlaying : public GrpcContext_Ping_Pong<ConnectionService_IsPlaying_ReaderWriter, ::sro::gamebackend::ConnectionStatus>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_IsPlaying_ReaderWriter, ::sro::gamebackend::ConnectionStatus> Super;

private:
	void Call(const FGrpcSroCharacterCharacterTarget& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_IsPlaying(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

